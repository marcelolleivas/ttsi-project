<testsuite errors="1" failures="2" hostname="ip-192-168-100-21.us-west-2.compute.internal" name="produtos.Produtos" skipped="0" tests="6" time="5.780865" timestamp="2021-03-06T18:52:45.247678"><testcase classname="produtos.Produtos" name=": Adicionar produto -- @1.1 " status="passed" time="0.787122"><system-out>
<![CDATA[
@scenario.begin
  Esquema do Cenário: : Adicionar produto -- @1.1 
    Dado que queira incluir um produto "simples" ... passed in 0.001s
    Então status de produto deve ser "201" ... passed in 0.786s
    E resposta de produto deve ser de "sucesso" ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
payload: {'produtonome': 'MacBook Pro 13', 'produtovalor': 7000, 'produtocores': ['cinza'], 'componentes': [{'componentenome': 'carregador', 'componentequantidade': 1}]}
URL USADA: http://165.227.93.41/lojinha/produto

]]>
</system-out></testcase><testcase classname="produtos.Produtos" name=": Adicionar produto -- @1.2 " status="passed" time="0.755079"><system-out>
<![CDATA[
@scenario.begin
  Esquema do Cenário: : Adicionar produto -- @1.2 
    Dado que queira incluir um produto "mais de uma cor" ... passed in 0.000s
    Então status de produto deve ser "201" ... passed in 0.755s
    E resposta de produto deve ser de "sucesso" ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
payload: {'produtonome': 'MacBook Pro 13', 'produtovalor': 7000, 'produtocores': ['cinza', 'preto'], 'componentes': [{'componentenome': 'carregador', 'componentequantidade': 1}]}
URL USADA: http://165.227.93.41/lojinha/produto

]]>
</system-out></testcase><testcase classname="produtos.Produtos" name=": Adicionar produto -- @1.3 " status="passed" time="0.735824"><system-out>
<![CDATA[
@scenario.begin
  Esquema do Cenário: : Adicionar produto -- @1.3 
    Dado que queira incluir um produto "mais de um componente" ... passed in 0.000s
    Então status de produto deve ser "201" ... passed in 0.735s
    E resposta de produto deve ser de "sucesso" ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
payload: {'produtonome': 'MacBook Pro 13', 'produtovalor': 7000, 'produtocores': ['cinza', 'preto'], 'componentes': [{'componentenome': 'carregador', 'componentequantidade': 1}, {'componentenome': 'fone de ouvido', 'componentequantidade': 1}]}
URL USADA: http://165.227.93.41/lojinha/produto

]]>
</system-out></testcase><testcase classname="produtos.Produtos" name=": Adicionar produto -- @1.4 " status="failed" time="0.816727"><failure message="('Expected status code was 400', 'Received status code is 201')" type="AssertionError">
<![CDATA[
Failing step: Então status de produto deve ser "400" ... failed in 0.816s
Location: api_tests_exercises/features/produtos.feature:8
Assertion Failed: ('Expected status code was 400', 'Received status code is 201')
Captured stdout:
payload: {'produtonome': 'MacBook Pro 13', 'produtovalor': 7000, 'componentes': [{'componentenome': 'carregador', 'componentequantidade': 1}, {'componentenome': 'fone de ouvido', 'componentequantidade': 1}]}
URL USADA: http://165.227.93.41/lojinha/produto]]>
</failure><system-out>
<![CDATA[
@scenario.begin
  Esquema do Cenário: : Adicionar produto -- @1.4 
    Dado que queira incluir um produto "sem cor" ... passed in 0.000s
    Então status de produto deve ser "400" ... failed in 0.816s
    E resposta de produto deve ser de "erro" ... skipped in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
payload: {'produtonome': 'MacBook Pro 13', 'produtovalor': 7000, 'componentes': [{'componentenome': 'carregador', 'componentequantidade': 1}, {'componentenome': 'fone de ouvido', 'componentequantidade': 1}]}
URL USADA: http://165.227.93.41/lojinha/produto

]]>
</system-out></testcase><testcase classname="produtos.Produtos" name=": Adicionar produto -- @1.5 " status="failed" time="1.854213"><failure message="('Expected status code was 400', 'Received status code is 201')" type="AssertionError">
<![CDATA[
Failing step: Então status de produto deve ser "400" ... failed in 1.854s
Location: api_tests_exercises/features/produtos.feature:8
Assertion Failed: ('Expected status code was 400', 'Received status code is 201')
Captured stdout:
payload: {'produtonome': 'MacBook Pro 13', 'produtovalor': 7000}
URL USADA: http://165.227.93.41/lojinha/produto]]>
</failure><system-out>
<![CDATA[
@scenario.begin
  Esquema do Cenário: : Adicionar produto -- @1.5 
    Dado que queira incluir um produto "sem componentes" ... passed in 0.000s
    Então status de produto deve ser "400" ... failed in 1.854s
    E resposta de produto deve ser de "erro" ... skipped in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
payload: {'produtonome': 'MacBook Pro 13', 'produtovalor': 7000}
URL USADA: http://165.227.93.41/lojinha/produto

]]>
</system-out></testcase><testcase classname="produtos.Produtos" name=": Adicionar produto -- @1.6 " status="failed" time="0.8319"><error message="Extra data: line 1 column 239 (char 238)" type="JSONDecodeError">
<![CDATA[
Failing step: Então status de produto deve ser "400" ... failed in 0.832s
Location: api_tests_exercises/features/produtos.feature:8
Traceback (most recent call last):
  File "/Users/marceloleivas/.pyenv/versions/3.7.5/lib/python3.7/site-packages/behave/model.py", line 1329, in run
    match.run(runner.context)
  File "/Users/marceloleivas/.pyenv/versions/3.7.5/lib/python3.7/site-packages/behave/matchers.py", line 98, in run
    self.func(context, *args, **kwargs)
  File "api_tests_exercises/features/steps/produtos.py", line 37, in assert_products_service
    context.response_data = json.loads(response.text)
  File "/Users/marceloleivas/.pyenv/versions/3.7.5/lib/python3.7/json/__init__.py", line 348, in loads
    return _default_decoder.decode(s)
  File "/Users/marceloleivas/.pyenv/versions/3.7.5/lib/python3.7/json/decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 239 (char 238)

Captured stdout:
payload: {'produtonome': 'MacBook Pro 13'}
URL USADA: http://165.227.93.41/lojinha/produto]]>
</error><system-out>
<![CDATA[
@scenario.begin
  Esquema do Cenário: : Adicionar produto -- @1.6 
    Dado que queira incluir um produto "sem valor" ... passed in 0.000s
    Então status de produto deve ser "400" ... failed in 0.832s
    E resposta de produto deve ser de "erro" ... skipped in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
payload: {'produtonome': 'MacBook Pro 13'}
URL USADA: http://165.227.93.41/lojinha/produto

]]>
</system-out></testcase></testsuite>